@using System;
@using Sandbox;
@using Sandbox.UI;
@using System.Threading
@namespace Sandbox.UI

@{
    var current = Orders.FirstOrDefault(x => x.Name == Value);
    var classes = current == null ? "" : "is-active";
}

<root class="packagefilterfacet @classes" onmousedown="@OpenMenu">

    @if ( current != null )
    {
        <i>@current.Icon</i>
        <div>@current.Title</div>
    }
    else
    {
        <i>@Orders.First().Icon</i>
        <div>Sort Order</div>

    }

    <div class="addon-button"><i>sort</i></div>

</root>

@code
{
    public Package.SortOrder[] Orders { get; set; }
    public string Value { get; set; }
    public Action<string> OnChange { get; set; }

    Popup menu;

    void SwitchTo( Package.SortOrder entry )
    {
        Value = entry.Name;
        OnChange?.Invoke(entry.Name);
        StateHasChanged();
    }

    void OpenMenu()
    {
        if (menu.IsValid())
        {
            menu.Delete();
            return;
        }

        menu = new Popup(this, Popup.PositionMode.BelowLeft, 0.0f);

        foreach (Package.SortOrder entry in Orders)
        {
            var o = menu.AddOption(entry.Title, entry.Icon, () => SwitchTo(entry));

            if (Value == entry.Name)
            {
                o.AddClass("active");
            }
        }

    }

}
