@using System;
@using Sandbox;
@using Sandbox.UI;
@using System.Threading
@namespace Sandbox.UI

@{
    var current = Facet.Entries.FirstOrDefault(x => x.Name == Value);
    var classes = current == null ? "" : "is-active";
}

<root class="packagefilterfacet @classes" onmousedown="@OpenMenu">

    @if ( current != null )
    {
        <i>@current.Icon</i>
        <div>@current.Title</div>
        <div class="addon-button clear-button" onmousedown="@OnClear"><i>clear</i></div>
    }
    else
    {
        <i>@Facet.Entries.First().Icon</i>
        <div>@Facet.Title</div>
        <div class="addon-button"><i>arrow_drop_down</i></div>
    }

</root>

@code
{
    public Package.Facet Facet { get; set; }
    public string Value { get; set; }
    public Action<Package.Facet, string> OnChange { get; set; }

    Popup menu;

    void SwitchTo( Package.Facet.Entry entry )
    {
        if (entry == null || Value == entry.Name)
        {
            OnChange?.Invoke(Facet, null);
            Value = null;
        }
        else
        {
            OnChange?.Invoke(Facet, entry.Name);
            Value = entry.Name;
        }

        StateHasChanged();
    }

    void OpenMenu()
    {
        if (menu.IsValid())
        {
            menu.Delete();
            return;
        }

        menu = new Popup(this, Popup.PositionMode.BelowLeft, 0.0f);

        foreach (var entry in Facet.Entries)
        {
            var o = menu.AddOption(entry.Title, entry.Icon, () => SwitchTo(entry));

            o.AddChild(new Label() { Classes = "count", Text = $"{entry.Count:n0}" });

            if (Value == entry.Name)
            {
                o.AddClass("active");
            }
        }

    }

    void OnClear( PanelEvent e )
    {
        e.StopPropagation();
        SwitchTo( null );
    }
}
